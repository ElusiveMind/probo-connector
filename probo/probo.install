<?php

use Drupal\Core\Database\Database;

/**
 * Implements hook_schema().
 */
function probo_schema() {
  $schema = [];
  $schema['probo_builds'] = [
    'description' => 'Contains the build id and time the build was created.',
    'fields' => [
      'id' => [
        'description' => 'Serial id for this entry',
        'type' => 'serial',
        'not null' => TRUE,
        'unassigned' => TRUE,
      ],
      'bid' => [
        'description' => 'The uuid of the build assigned by Probo',
        'type' => 'varchar',
        'length' => 36,
        'not null' => TRUE,
        'default' => '',
      ],
      'service' => [
        'description' => 'The service for the repository.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ],
      'repository' => [
        'description' => 'The repository name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '0',
      ],
      'owner' => [
        'description' => 'The owning organization of the repo.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '0',
      ],
      'pull_request_name' => [
        'description' => 'The name of the pull request.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '0',
      ],
      'author_name' => [
        'description' => 'The author of the pull request.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '0',
      ],
      'pull_request_url' => [
        'description' => 'The url of the pull request.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '0',
      ],
    ],
    'primary key' => ['id'],
  ];

  $schema['probo_tasks'] = [
    'description' => 'Contains the build id and time the build was created.',
    'fields' => [
      'id' => [
        'description' => 'Serial id for this entry',
        'type' => 'serial',
        'not null' => TRUE,
        'unassigned' => TRUE,
      ],
      'bid' => [
        'description' => 'The uuid of the build assigned by Probo',
        'type' => 'varchar',
        'length' => 36,
        'not null' => TRUE,
        'default' => '',
      ],
      'tid' => [
        'description' => 'The individual task id for the current build',
        'type' => 'varchar',
        'length' => 16,
        'not null' => TRUE,
        'default' => '',
      ],
      'event_name' => [
        'description' => 'The name of the event as specified by Probo.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ],
      'plugin' => [
        'description' => 'The plugin used for this event.',
        'type' => 'varchar',
        'length' => 96,
        'not null' => TRUE,
        'default' => '',
      ],
      'timestamp' => [
        'description' => 'The microtime this file was created.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '0',
      ],
      'payload' => [
        'description' => 'The output of the event.',
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ],
    ],
    'primary key' => ['id'],
  ];
  return $schema;
}

/**
 * Rename pr_name to pull_request_name and add pull_request_url
 */
function probo_update_8101() {
  // Initialize our schema object.
  $schema = Database::getConnection()->schema();

  // Add pull_request_url
  $spec = [
    'description' => 'The pull request url for this build.',
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
  ];  
  $schema->addField('probo_builds', 'pull_request_url', $spec);

  $spec = [
    'description' => 'The name of the pull request.',
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '0',
  ];
  $schema->changeField('probo_builds', 'pr_name', 'pull_request_name', $spec);
}

/**
 * Rename repo to repository and add service
 */
function probo_update_8102() {
  // Initialize our schema object.
  $schema = Database::getConnection()->schema();
  
  $spec = [
    'description' => 'The service for the repository.',
    'type' => 'varchar',
    'length' => 32,
    'not null' => TRUE,
    'default' => '',
  ];
  $schema->addField('probo_builds', 'service', $spec);

  $spec = [
    'description' => 'The repository name.',
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '0',
  ];
  $schema->changeField('probo_builds', 'repo', 'repository', $spec);
}